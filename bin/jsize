#!/usr/bin/env node
const program = require('commander');
const prettyBytes = require('pretty-bytes');
const colors = require('colors');
const jsize = require('../index');

program
  .usage('[options] <name ...>')
  .option('-v, --verbose', 'Display initial, minified, gzip size.')
  .parse(process.argv);

function colorBytes(n) {
  const str = prettyBytes(n);
  if (n < 1000) {
    return str.underline.green;
  } else if (n < 5000) {
    return str.green;
  } else if (n < 50000) {
    return str.yellow;
  } else {
    return str.red;
  }
}

function print(packageName, result) {
  let info = '';
  if (program.verbose) {
    info += prettyBytes(result.initial) + ' (initial)\t';
    info += prettyBytes(result.minify) + ' (minify)\t';
  }
  info += colorBytes(result.gzip) + ' (gzip)';
  console.log(packageName, '\t', info);
}

async function forEach(packages) {
  const packageName = packages.shift();
  const result = await jsize(packageName);
  print(packageName, result);

  if (packages.length > 0) {
    await forEach(packages);
  }
}

if (program.args.length > 0) {
  forEach(program.args).catch((err) => {
    console.error(err);
  });
} else {
  program.help();
}
